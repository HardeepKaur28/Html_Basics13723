@import url('https://fonts.googleapis.com/css2?family=Lumanosimo&display=swap');
body {
    background: linear-gradient(to bottom, rgba(241, 38, 255, 0.6), rgba(100, 158, 245, 0.5));
    font-family: 'Lumanosimo', cursive;
    font-size: 0.9em;
    text-align: center;
}


/*
Selectors: 
 selector { cssProperty: cssValue; } 
a.) Element Selector - Selects element based on the name  */

h2 {
    color: rgb(221, 255, 0);
    text-align: center;
    font-size: 3em;
    /* text-shadow: hor -x. vert -y. ,  ,color; */
    text-shadow: 10px 10px 4px black, -10px -10px 4px white;
}


/* 2.id selector : Selects the element based on the id.  */


/*
#heading-one:hover {
     color: rgb(203, 86, 13); 
}
*/


/* 3.class selector :Selects the elements based on the class name */


/* #para-one, #para-two, #para-four {
    color: gray;
}--> avoid this by using class selector */

.mypara {
    color: rgb(5, 109, 17);
}


/* 4.Attribute selector
elementname[attributename condition] */


/* I want to find the <a> whose href starts with https:// */


/* ^= -> Starts with
$= -> Ends with
*= -> contains */

a {
    text-decoration: none;
}

a[href^="https:"] {
    color: violet;
}

a[href$=".jpg"] {
    color: maroon;
}

a[href*="/"] {
    color: red;
}

img[src^="../"] {
    border: 10px solid gray;
}


/* 5.) Pseudo Selectors */


/* elementName: pseudoProperty { ... } */

ol:first-child {
    color: red;
}

li:first-child {
    color: green;
}

.ordered-list-item:last-child {
    color: red;
}

.unordered-list-item:first-child {
    color: blue;
}

.ordered-list-item:nth-child(3) {
    color: yellow;
}


/* Colors: -> color picker
1. Named Colors     2. HEX Code     3. RBG() -> rgb(red, green, blue)   4. RGBA() -> rgb(red, green, blue, absolute) -> abs [0-1]; 
*/

#me {
    color: rgb(21, 3, 77);
    background: #bb1b06;
}


/* //gradients : !,Linear Gradient , 2.Radial Gradient */

#container-one {
    width: 308px;
    height: 300px;
    background: linear-gradient(to right, white, red, orange, green, black);
    /* its destination direction , 0% bottom,90left,180top 270right) */
}

#star {
    width: 200px;
    height: 300px;
    background: linear-gradient(90deg, green, yellow, orange, red, violet, pink, black);
}


/* NOTE :- If no direction is provided, default is top to bottom | Directions :- bottom, top, left, right */


/* background: linear-gradient(direction, black, red, blue, green, yellow, white); */


/* background: linear-gradient(to left, black, red, blue, green, yellow, white); */


/* NOTE :- You can specify the directions usinh deg values (0deg) starts from bottom, reaches to top */


/* background: linear-gradient(360deg, black, red, blue, green, yellow, white); */

#container-three {
    width: 400px;
    height: 300px;
    background: radial-gradient(circle, black 10%, red 20%, blue 25%, green 30%, yellow 80%, white 90%);
}


/* Date:17/7/23 */


/* Unit of Measurements */


/* 1.Absolute unit:a value :px,cm,mm,in..., 2.Relative unit:(em) 

*/

p {
    /* font-size: 18px; */
    /* font-size: 2em; */
    font-size: 1.2em
    /* font-size: 5cm; */
}

img {
    width: 50%;
    height: 500px;
}


/* Box Model : */

#form-name,
#form-email,
#form-password {
    width: 100%;
}

.form-item {
    margin: 8px;
}

form {
    /* border: widthofborder style color */
    /* style : 1.solid 2.dotted 3.dashed 4.double */
    border: 4px solid gray;
    /* 
    padding: a-px;
    padding: a-px b-px; a -> top-bottom | b -> left-right
    padding: a-px b-px c-px d-px; a -> top | b -> right | c -> bottom | d -> left 
    */
    padding: 10px;
    padding: 10px 5px;
    padding-top: 5px;
    padding-right: 10px;
    padding-bottom: 15px;
    padding-left: 20px;
    padding: 5px 10px 15px 20px;
    margin: 10px;
    margin: 10px 5px;
    margin: 5px 10px 15px 20px;
    /* NOTE:- padding & margin are both parent properties -> they also have sub-properties associated with them. */
    /* padding-left:; padding-right:; padding-top:; padding-bottom:; margin-top:; margin-bottom:; margin-left:; margin-right:; */
}

#container-two {
    width: 55%;
    height: 350px;
    /* NOTE:- background is a parent property */
    /* background: red; */
    background-image: url(../html/assets/pictures/download.jpg);
    background-color: blueviolet;
    background-repeat: no-repeat;
    /* background-size: 100%; background-size: auto; background-size: cover; */
    background-size: cover;
    border: 4px solid brown;
}


/* Fonts and Font-Family */


/*CSS Flex-Box */

#container {
    display: flex;
    /* flex-direction: row(default),column , row-reverse ,column-reverse; */
    flex-wrap: wrap;
    /* defult(nowrap)*/
    /* justify-content: flex-start ,flex-end ,center,space-between ,space-evently ,space-around; */
    justify-content: space-around;
    /*start */
}

.container-item {
    width: 100px;
    height: 100px;
    font-size: 6em;
    text-align: center;
    background: black;
    color: white;
    border: 4px double red;
    padding: 10px;
    margin: 15px;
}

#container-para {
    display: flex;
    text-align: center;
    justify-content: center;
    flex-wrap: wrap;
    margin: 10px;
}

.container-para-item {
    width: 300px;
    height: 300px;
    border: 3px double rgb(26, 0, 105);
    background-color: rgb(251, 82, 215);
    margin: 10px;
}


/* //Media Queries */

#container-media {
    width: 70%;
    height: 400px;
}


/* only printing ,only scree , or both | all*/


/* Mobile Phone - 0mim max500*/

@media only screen and (max-width: 800px) {
    body {
        font-size: 1.3em;
    }
    #container-media {
        background-color: black;
    }
}